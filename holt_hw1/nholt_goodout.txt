noah@noahs-MacBook-Pro holt_hw1_jar % java -jar holt_hw1.jar ../../../SyntaxB-GOOD-SP24.txt
noah holt, 0735, CS4100/5100, SPRING 2024
0001 UNIT GOOD3B;
        unit |  0015 |  UNIT
--> Entering Program
        IDNT |  0050 |  GOOD3B
        endl |  0036 |  ;
0002
0003 (* This Part 3B test file should have NO errors! *)
0004 VAR COUNT, TOTAL : INTEGER;
        $var |  0013 |  VAR
 --> Entering Block
  --> Entering Variabledecsec
        IDNT |  0050 |  COUNT
        coma |  0044 |  ,
        IDNT |  0050 |  TOTAL
        coln |  0047 |  :
        intr |  0001 |  INTEGER
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0005 VAR I : INTEGER;
        $var |  0013 |  VAR
  <-- Exiting Variabledecsec
  --> Entering Variabledecsec
        IDNT |  0050 |  I
        coln |  0047 |  :
        intr |  0001 |  INTEGER
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0006 VAR STOP : integer;
        $var |  0013 |  VAR
  <-- Exiting Variabledecsec
  --> Entering Variabledecsec
        IDNT |  0050 |  STOP
        coln |  0047 |  :
        intr |  0001 |  integer
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0007
0008 BEGIN
        begn |  0011 |  BEGIN
  <-- Exiting Variabledecsec
  --> Entering Blockbody
0009 READLN(STOP);
        read |  0010 |  READLN
   --> Entering Statement
        lfpr |  0034 |  (
    --> Entering handleReadln
        IDNT |  0050 |  STOP
        rtpr |  0035 |  )
        endl |  0036 |  ;
0010 TOTAL := 12;
        IDNT |  0050 |  TOTAL
    <-- Exiting handleReadln
    --> Entering handleAssignment
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  12
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        endl |  0036 |  ;
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
    <-- Exiting handleAssignment
0011 FOR I := 1 TO STOP DO
        _for |  0007 |  FOR
        IDNT |  0050 |  I
    --> Entering handleFor
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  1
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        _to_ |  0002 |  TO
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
        IDNT |  0050 |  STOP
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
        _do_ |  0003 |  DO
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
0012   BEGIN
        begn |  0011 |  BEGIN
     --> Entering Statement
      --> Entering Blockbody
0013   TOTAL := TOTAL + I
        IDNT |  0050 |  TOTAL
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
        asgn |  0037 |  :=
         <-- Exiting Variable
        IDNT |  0050 |  TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
        add_ |  0032 |  +
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
        IDNT |  0050 |  I
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
0014   END;
        end_ |  0012 |  END
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
        endl |  0036 |  ;
      <-- Exiting Blockbody
0015
0016 REPEAT
        rept |  0017 |  REPEAT
0017   TOTAL := TOTAL - 1
        IDNT |  0050 |  TOTAL
      --> Entering handleRepeat
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
        asgn |  0037 |  :=
         <-- Exiting Variable
        IDNT |  0050 |  TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
        subt |  0033 |  -
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
        INTC |  0051 |  1
          --> Entering Term
           --> Entering Factor
            --> Entering UnsignedConstant
             --> Entering UnsignedNumber
0018 UNTIL TOTAL <= 20;
        untl |  0018 |  UNTIL
             <-- Exiting UnsignedNumber
            <-- Exiting UnsignedConstant
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
        IDNT |  0050 |  TOTAL
       --> Entering Relexpression
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering Variable
        less |  0039 |  <
           <-- Exiting Variable
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Relop
        equl |  0042 |  =
        <-- Exiting Relop
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
        INTC |  0051 |  20
           --> Entering SimpleExpression
            --> Entering Term
             --> Entering Factor
              --> Entering UnsignedConstant
               --> Entering UnsignedNumber
        endl |  0036 |  ;
               <-- Exiting UnsignedNumber
              <-- Exiting UnsignedConstant
             <-- Exiting Factor
            <-- Exiting Term
           <-- Exiting SimpleExpression
0019
0020 IF TOTAL > 15 THEN
        _if_ |  0004 |  IF
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
       <-- Exiting Relexpression
        IDNT |  0050 |  TOTAL
      <-- Exiting handleRepeat
      --> Entering handleAssignment
       --> Entering Variable
        grtr |  0038 |  >
       <-- Exiting Variable
ERROR: Expected := but found >
      <-- Exiting handleAssignment
ERROR: Expected Statement start but found >
     <-- Exiting handleFor
    <-- Exiting Statement
ERROR: Expected end but found >
   <-- Exiting Blockbody
  <-- Exiting Block
ERROR: Expected . but found >
 <-- Exiting Program
Done.
noah@noahs-MacBook-Pro holt_hw1_jar % java -jar holt_hw1.jar ../../../SyntaxB-GOOD-SP24.txt
noah holt, 0735, CS4100/5100, SPRING 2024
0001 UNIT GOOD3B;
        unit |  0015 |  UNIT
--> Entering Program
        IDNT |  0050 |  GOOD3B
        endl |  0036 |  ;
0002
0003 (* This Part 3B test file should have NO errors! *)
0004 VAR COUNT, TOTAL : INTEGER;
        $var |  0013 |  VAR
 --> Entering Block
  --> Entering Variabledecsec
        IDNT |  0050 |  COUNT
        coma |  0044 |  ,
        IDNT |  0050 |  TOTAL
        coln |  0047 |  :
        intr |  0001 |  INTEGER
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0005 VAR I : INTEGER;
        $var |  0013 |  VAR
  <-- Exiting Variabledecsec
  --> Entering Variabledecsec
        IDNT |  0050 |  I
        coln |  0047 |  :
        intr |  0001 |  INTEGER
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0006 VAR STOP : integer;
        $var |  0013 |  VAR
  <-- Exiting Variabledecsec
  --> Entering Variabledecsec
        IDNT |  0050 |  STOP
        coln |  0047 |  :
        intr |  0001 |  integer
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0007
0008 BEGIN
        begn |  0011 |  BEGIN
  <-- Exiting Variabledecsec
  --> Entering Blockbody
0009 READLN(STOP);
        read |  0010 |  READLN
   --> Entering Statement
        lfpr |  0034 |  (
    --> Entering handleReadln
        IDNT |  0050 |  STOP
        rtpr |  0035 |  )
        endl |  0036 |  ;
0010 TOTAL := 12;
        IDNT |  0050 |  TOTAL
    <-- Exiting handleReadln
    --> Entering handleAssignment
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  12
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        endl |  0036 |  ;
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
    <-- Exiting handleAssignment
0011 FOR I := 1 TO STOP DO
        _for |  0007 |  FOR
        IDNT |  0050 |  I
    --> Entering handleFor
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  1
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        _to_ |  0002 |  TO
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
        IDNT |  0050 |  STOP
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
        _do_ |  0003 |  DO
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
0012   BEGIN
        begn |  0011 |  BEGIN
     --> Entering Statement
      --> Entering Blockbody
0013   TOTAL := TOTAL + I
        IDNT |  0050 |  TOTAL
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
        asgn |  0037 |  :=
         <-- Exiting Variable
        IDNT |  0050 |  TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
        add_ |  0032 |  +
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
        IDNT |  0050 |  I
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
0014   END;
        end_ |  0012 |  END
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
        endl |  0036 |  ;
      <-- Exiting Blockbody
0015
0016 REPEAT
        rept |  0017 |  REPEAT
0017   TOTAL := TOTAL - 1
        IDNT |  0050 |  TOTAL
      --> Entering handleRepeat
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
        asgn |  0037 |  :=
         <-- Exiting Variable
        IDNT |  0050 |  TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
        subt |  0033 |  -
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
        INTC |  0051 |  1
          --> Entering Term
           --> Entering Factor
            --> Entering UnsignedConstant
             --> Entering UnsignedNumber
0018 UNTIL TOTAL <= 20;
        untl |  0018 |  UNTIL
             <-- Exiting UnsignedNumber
            <-- Exiting UnsignedConstant
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
        IDNT |  0050 |  TOTAL
       --> Entering Relexpression
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering Variable
        less |  0039 |  <
           <-- Exiting Variable
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Relop
        equl |  0042 |  =
        <-- Exiting Relop
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
        INTC |  0051 |  20
           --> Entering SimpleExpression
            --> Entering Term
             --> Entering Factor
              --> Entering UnsignedConstant
               --> Entering UnsignedNumber
        endl |  0036 |  ;
               <-- Exiting UnsignedNumber
              <-- Exiting UnsignedConstant
             <-- Exiting Factor
            <-- Exiting Term
           <-- Exiting SimpleExpression
0019
0020 IF TOTAL > 15 THEN
        _if_ |  0004 |  IF
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
       <-- Exiting Relexpression
        IDNT |  0050 |  TOTAL
      <-- Exiting handleRepeat
      --> Entering handleAssignment
       --> Entering Variable
        grtr |  0038 |  >
       <-- Exiting Variable
ERROR: Expected := but found >
      <-- Exiting handleAssignment
ERROR: Expected Statement start but found >
     <-- Exiting handleFor
    <-- Exiting Statement
ERROR: Expected end but found >
   <-- Exiting Blockbody
  <-- Exiting Block
ERROR: Expected . but found >
 <-- Exiting Program
Done.
