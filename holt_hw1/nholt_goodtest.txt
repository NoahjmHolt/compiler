noah@noahs-MacBook-Pro holt_hw1_jar % java -jar holt_hw1.jar ../../../GoodSyntaxA-SP24.txt
noah holt, 0735, CS4100/5100, SPRING 2024
INPUT FILE TO PROCESS IS: ../../../GoodSyntaxA-SP24.txt
0001
0002 UNIT goodtree;
        unit |  0015 |  UNIT
--> Entering Program
        IDNT |  0050 |  goodtree
        endl |  0036 |  ;
0003
0004 (* This Part A test file should have NO errors! *)
0005
0006 BEGIN
        begn |  0011 |  BEGIN
 --> Entering Block
0007 { The only statements for Part A are ASSIGNMENTS with EXPRESSIONS }
0008
0009 total:=3.14*radius*radius;
        IDNT |  0050 |  total
  --> Entering Statement
   --> Entering handleAssignment
    --> Entering Variable
        asgn |  0037 |  :=
    <-- Exiting Variable
        FLOT |  0052 |  3.14
    --> Entering SimpleExpression
     --> Entering Term
      --> Entering Factor
       --> Entering UnsignedConstant
        --> Entering UnsignedNumber
        mult |  0031 |  *
        <-- Exiting UnsignedNumber
       <-- Exiting UnsignedConstant
      <-- Exiting Factor
      --> Entering Mulop
        IDNT |  0050 |  radius
      <-- Exiting Mulop
      --> Entering Factor
       --> Entering Variable
        mult |  0031 |  *
       <-- Exiting Variable
      <-- Exiting Factor
      --> Entering Mulop
        IDNT |  0050 |  radius
      <-- Exiting Mulop
      --> Entering Factor
       --> Entering Variable
        endl |  0036 |  ;
       <-- Exiting Variable
      <-- Exiting Factor
      --> Entering Mulop
      <-- Exiting Mulop
     <-- Exiting Term
     --> Entering Addop
     <-- Exiting Addop
    <-- Exiting SimpleExpression
   <-- Exiting handleAssignment
  <-- Exiting Statement
0010
0011 a :=(a+c)*(b-d)       ;
        IDNT |  0050 |  a
  --> Entering Statement
   --> Entering handleAssignment
    --> Entering Variable
        asgn |  0037 |  :=
    <-- Exiting Variable
        lfpr |  0034 |  (
    --> Entering SimpleExpression
     --> Entering Term
      --> Entering Factor
        IDNT |  0050 |  a
       --> Entering SimpleExpression
        --> Entering Term
         --> Entering Factor
          --> Entering Variable
        add_ |  0032 |  +
          <-- Exiting Variable
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        IDNT |  0050 |  c
        <-- Exiting Addop
        --> Entering Term
         --> Entering Factor
          --> Entering Variable
        rtpr |  0035 |  )
          <-- Exiting Variable
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        <-- Exiting Addop
       <-- Exiting SimpleExpression
        mult |  0031 |  *
      <-- Exiting Factor
      --> Entering Mulop
        lfpr |  0034 |  (
      <-- Exiting Mulop
      --> Entering Factor
        IDNT |  0050 |  b
       --> Entering SimpleExpression
        --> Entering Term
         --> Entering Factor
          --> Entering Variable
        subt |  0033 |  -
          <-- Exiting Variable
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        IDNT |  0050 |  d
        <-- Exiting Addop
        --> Entering Term
         --> Entering Factor
          --> Entering Variable
        rtpr |  0035 |  )
          <-- Exiting Variable
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        <-- Exiting Addop
       <-- Exiting SimpleExpression
        endl |  0036 |  ;
      <-- Exiting Factor
      --> Entering Mulop
      <-- Exiting Mulop
     <-- Exiting Term
     --> Entering Addop
     <-- Exiting Addop
    <-- Exiting SimpleExpression
   <-- Exiting handleAssignment
  <-- Exiting Statement
0012
0013 d1 := -b - ((2+4) + 2*34) * c / 2.5
        IDNT |  0050 |  d1
  --> Entering Statement
   --> Entering handleAssignment
    --> Entering Variable
        asgn |  0037 |  :=
    <-- Exiting Variable
        subt |  0033 |  -
    --> Entering SimpleExpression
        IDNT |  0050 |  b
     --> Entering Term
      --> Entering Factor
       --> Entering Variable
        subt |  0033 |  -
       <-- Exiting Variable
      <-- Exiting Factor
      --> Entering Mulop
      <-- Exiting Mulop
     <-- Exiting Term
     --> Entering Addop
        lfpr |  0034 |  (
     <-- Exiting Addop
     --> Entering Term
      --> Entering Factor
        lfpr |  0034 |  (
       --> Entering SimpleExpression
        --> Entering Term
         --> Entering Factor
        INTC |  0051 |  2
          --> Entering SimpleExpression
           --> Entering Term
            --> Entering Factor
             --> Entering UnsignedConstant
              --> Entering UnsignedNumber
        add_ |  0032 |  +
              <-- Exiting UnsignedNumber
             <-- Exiting UnsignedConstant
            <-- Exiting Factor
            --> Entering Mulop
            <-- Exiting Mulop
           <-- Exiting Term
           --> Entering Addop
        INTC |  0051 |  4
           <-- Exiting Addop
           --> Entering Term
            --> Entering Factor
             --> Entering UnsignedConstant
              --> Entering UnsignedNumber
        rtpr |  0035 |  )
              <-- Exiting UnsignedNumber
             <-- Exiting UnsignedConstant
            <-- Exiting Factor
            --> Entering Mulop
            <-- Exiting Mulop
           <-- Exiting Term
           --> Entering Addop
           <-- Exiting Addop
          <-- Exiting SimpleExpression
        add_ |  0032 |  +
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        INTC |  0051 |  2
        <-- Exiting Addop
        --> Entering Term
         --> Entering Factor
          --> Entering UnsignedConstant
           --> Entering UnsignedNumber
        mult |  0031 |  *
           <-- Exiting UnsignedNumber
          <-- Exiting UnsignedConstant
         <-- Exiting Factor
         --> Entering Mulop
        INTC |  0051 |  34
         <-- Exiting Mulop
         --> Entering Factor
          --> Entering UnsignedConstant
           --> Entering UnsignedNumber
        rtpr |  0035 |  )
           <-- Exiting UnsignedNumber
          <-- Exiting UnsignedConstant
         <-- Exiting Factor
         --> Entering Mulop
         <-- Exiting Mulop
        <-- Exiting Term
        --> Entering Addop
        <-- Exiting Addop
       <-- Exiting SimpleExpression
        mult |  0031 |  *
      <-- Exiting Factor
      --> Entering Mulop
        IDNT |  0050 |  c
      <-- Exiting Mulop
      --> Entering Factor
       --> Entering Variable
        divd |  0030 |  /
       <-- Exiting Variable
      <-- Exiting Factor
      --> Entering Mulop
        FLOT |  0052 |  2.5
      <-- Exiting Mulop
      --> Entering Factor
       --> Entering UnsignedConstant
        --> Entering UnsignedNumber
0014
0015 end.
        end_ |  0012 |  end
        <-- Exiting UnsignedNumber
       <-- Exiting UnsignedConstant
      <-- Exiting Factor
      --> Entering Mulop
      <-- Exiting Mulop
     <-- Exiting Term
     --> Entering Addop
     <-- Exiting Addop
    <-- Exiting SimpleExpression
   <-- Exiting handleAssignment
  <-- Exiting Statement
        dots |  0048 |  .
 <-- Exiting Block
Success.
<-- Exiting Program
Done.
