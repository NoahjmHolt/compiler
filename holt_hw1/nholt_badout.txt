noah@noahs-MacBook-Pro holt_hw1_jar % java -jar holt_hw1.jar ../../../SyntaxB-BAD-SP24.txt
noah holt, 0735, CS4100/5100, SPRING 2024
0001 UNIT BAD3B;
        unit |  0015 |  UNIT
--> Entering Program
        IDNT |  0050 |  BAD3B
        endl |  0036 |  ;
0002
0003 (* This Part 3B test file has errors listed below *)
0004 VAR COUNT, TOTAL : INTEGER;
        $var |  0013 |  VAR
 --> Entering Block
  --> Entering Variabledecsec
        IDNT |  0050 |  COUNT
        coma |  0044 |  ,
        IDNT |  0050 |  TOTAL
        coln |  0047 |  :
        intr |  0001 |  INTEGER
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0005
0006 VAR STOP : integer;
        $var |  0013 |  VAR
  <-- Exiting Variabledecsec
  --> Entering Variabledecsec
        IDNT |  0050 |  STOP
        coln |  0047 |  :
        intr |  0001 |  integer
   --> Entering Simpletype
        endl |  0036 |  ;
   <-- Exiting Simpletype
0007
0008 BEGIN
        begn |  0011 |  BEGIN
  <-- Exiting Variabledecsec
  --> Entering Blockbody
0009 READLN(STOP);
        read |  0010 |  READLN
   --> Entering Statement
        lfpr |  0034 |  (
    --> Entering handleReadln
        IDNT |  0050 |  STOP
        rtpr |  0035 |  )
        endl |  0036 |  ;
0010 TOTAL := 12;
        IDNT |  0050 |  TOTAL
    <-- Exiting handleReadln
    --> Entering handleAssignment
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  12
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        endl |  0036 |  ;
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
    <-- Exiting handleAssignment
0011 (* I is undeclared, a message to that effect should print, and continue on *)
0012 FOR I := 1 TO STOP DO
        _for |  0007 |  FOR
        IDNT |  0050 |  I
    --> Entering handleFor
     --> Entering Variable
        asgn |  0037 |  :=
     <-- Exiting Variable
        INTC |  0051 |  1
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        _to_ |  0002 |  TO
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
        IDNT |  0050 |  STOP
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
        _do_ |  0003 |  DO
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
0013   BEGIN
        begn |  0011 |  BEGIN
     --> Entering Statement
      --> Entering Blockbody
0014   TOTAL := TOTAL + I
        IDNT |  0050 |  TOTAL
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
        asgn |  0037 |  :=
         <-- Exiting Variable
        IDNT |  0050 |  TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
        add_ |  0032 |  +
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
        IDNT |  0050 |  I
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
0015   END;
        end_ |  0012 |  END
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
        endl |  0036 |  ;
      <-- Exiting Blockbody
0016
0017 (* Things go bad, not a statement start below, show EXPECTED,
0018    set ANYERRORS true, and resynch with statement-level parsing*)
0019 UNTIL TOTAL <= 20;
        untl |  0018 |  UNTIL
     <-- Exiting Statement
    <-- Exiting handleFor
   <-- Exiting Statement
ERROR: Expected end but found UNTIL
  <-- Exiting Blockbody
 <-- Exiting Block
ERROR: Expected . but found UNTIL
<-- Exiting Program
Done.
