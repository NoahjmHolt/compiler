ant -f F:\\!CurrSchool\\CS4100\\JavaProj\\SP24Project5 -Dnb.internal.action.name=run run
init:
Deleting: F:\!CurrSchool\CS4100\JavaProj\SP24Project5\build\built-jar.properties
deps-jar:
Updating property file: F:\!CurrSchool\CS4100\JavaProj\SP24Project5\build\built-jar.properties
compile:
run:
Code Generation SP 2024, by <Student Name>
Parsing f:\\CodeGenFULL-SP24.txt
0001 UNIT CodegenFull;
f:\\CodeGenFULL-SP24
0002 VAR
0003   n, factorial : INTEGER;
0004 VAR  count : integer;
0005 
0006 LABEL BOTTOM, TOP; 
0007 
0008 begin
0009 WRITELN("Full SPRING 2024 Test File");
0010 
0011 WRITELN("Calculating Factorial");
0012 WRITELN("Click in the CONSOLE WINDOW, and enter the value 7 for n:");
0013 readln(n);  {should be same result as doing n := 7;}
0014 factorial := 1;
0015 count := 1;
0016 WHILE count <= n DO
0017   begin
0018   factorial := factorial*count;
0019   count := count + 1
0020   end;
0021 WRITELN("The value of 7! is:"); {Expected result is 5040}
0022 WRITELN(factorial);
0023 WRITELN(" "); {blank line}
0024 
0025 WRITELN("After the WHILE, Count is: ");
0026 WRITELN(count);
0027 WRITELN("--------------------------- "); {blank line}
0028 
0029 {count should be 8 at this point}
0030 while count > 1 do
0031   begin
0032   WRITELN("Count = ");
0033   WRITELN(count);
0034   if count - 3 > 2 then
0035     WRITELN("Count - 3 is > 2")
0036   else
0037     WRITELN("Count - 3 is <= 2");
0038   count := count -1
0039   end;
0040 
0041 WRITELN("After the loop, Count is: ");
0042 WRITELN(count);
0043 
0044 writeln(" ");
0045 writeln("A TABLE OF SQUARES for 1 to 5");
0046 
0047 for n := 1 to 5 do
0048   begin 
0049   writeln(n*n)
0050   end;
0051  
0052   WRITELN("All done.")
0053 end. 
Success.
Full SPRING 2024 Test File
Calculating Factorial
Click in the CONSOLE WINDOW, and enter the value 7 for n:
>7
The value of 7! is:
5040
 
After the WHILE, Count is: 
8
--------------------------- 
Count = 
8
Count - 3 is > 2
Count = 
7
Count - 3 is > 2
Count = 
6
Count - 3 is > 2
Count = 
5
Count - 3 is <= 2
Count = 
4
Count - 3 is <= 2
Count = 
3
Count - 3 is <= 2
Count = 
2
Count - 3 is <= 2
After the loop, Count is: 
1
 
A TABLE OF SQUARES for 1 to 5
1
4
9
16
25
All done.
Execution terminated by program STOP.
Done.
BUILD SUCCESSFUL (total time: 9 seconds)
