/Users/noah/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58741:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/noah/Desktop/school/Spring24/compiler/holt_hw1/out/production/holt_hw1 main
Lexical for LexicalTestSP24.txt
0001 
0002 
0003 
0004 {Here is the SPRING 2024 Lexical Test file which 
0005   has a comment that
0006   spans 3 lines, followed by an empty comment }
0007 {}
0008 
0009 amount:=1;
	IDNT | 	0050 | 	amount
	asgn | 	0037 | 	:=
	INTC | 	0051 | 	1
	endl | 	0036 | 	;
0010 minor_axis:=a+b-c*21.7/22;
	IDNT | 	0050 | 	minor_axis
	asgn | 	0037 | 	:=
	IDNT | 	0050 | 	a
	add_ | 	0032 | 	+
	IDNT | 	0050 | 	b
	subt | 	0033 | 	-
	IDNT | 	0050 | 	c
	mult | 	0031 | 	*
	FLOT | 	0052 | 	21.7
	divd | 	0030 | 	/
	INTC | 	0051 | 	22
	endl | 	0036 | 	;
0011      123456789112345 (*this int number is 15 chars, truncate int to 6
**** ERROR FOUND: Integer too long, truncating to 6 characters.
	INTC | 	0051 | 	123456
0012                           AND give message *)
0013      12.34567891134567 (*this number is 17 chars, but should be 
**** ERROR FOUND: Integer too long, truncating to 12 characters.
	FLOT | 	0052 | 	12.345678911
0014 	                     truncated to 12 in the symbol table, with console 
0015 						 message*)
0016 hereisareallylongidentifierthatistoolong := 66; {truncate to 20, add to ST
**** ERROR FOUND: Ident Name too long, truncating to 20 chars!
	IDNT | 	0050 | 	hereisareallylongide
	asgn | 	0037 | 	:=
	INTC | 	0051 | 	66
	endl | 	0036 | 	;
0017                                                     give error message}
0018 hereisareallylongidentifierthatissameasabovewhentruncated := 76.5E-12;
**** ERROR FOUND: Ident Name too long, truncating to 20 chars!
	IDNT | 	0050 | 	hereisareallylongide
	asgn | 	0037 | 	:=
**** ERROR FOUND: Not a Valid Floating Point!
**** ERROR FOUND: Something seems wrong!
	unkn | 	0099 | 	76.5E
	subt | 	0033 | 	-
	INTC | 	0051 | 	12
	endl | 	0036 | 	;
0019   109.E+10      12.33E5 
**** ERROR FOUND: Not a Valid Floating Point!
**** ERROR FOUND: Something seems wrong!
	unkn | 	0099 | 	109.E
	add_ | 	0032 | 	+
	INTC | 	0051 | 	10
	FLOT | 	0052 | 	12.33E5
0020   12.4 E-2
	FLOT | 	0052 | 	12.4
	IDNT | 	0050 | 	E
	subt | 	0033 | 	-
	INTC | 	0051 | 	2
0021   
0022    *) {<--Orphaned closed comment is just '*' and ')' returned as separate tokens}
	mult | 	0031 | 	*
	rtpr | 	0035 | 	)
0023           
0024 		  myString_1 : = "a good string";
	IDNT | 	0050 | 	myString_1
	asgn | 	0037 | 	:=
	STRG | 	0053 | 	a good string
	endl | 	0036 | 	;
0025 		  string2 := "unfinished string makes an error ;
	IDNT | 	0050 | 	string2
	asgn | 	0037 | 	:=
**** ERROR FOUND: Unterminated String!
	endl | 	0036 | 	;
0026   
0027   test single #and two char tokens 
	IDNT | 	0050 | 	test
	IDNT | 	0050 | 	single
	unkn | 	0099 | 	#
	IDNT | 	0050 | 	and
	IDNT | 	0050 | 	two
	IDNT | 	0050 | 	char
	IDNT | 	0050 | 	tokens
0028      # /*^&%+-  some more (   ) (**) ;:=><>=<==<>,[]:.
	unkn | 	0099 | 	# /*^&%+-  
	IDNT | 	0050 | 	some
	IDNT | 	0050 | 	more
	lfpr | 	0034 | 	(
	rtpr | 	0035 | 	)
	endl | 	0036 | 	;
	asgn | 	0037 | 	:=
	grtr | 	0038 | 	>
	 | 	0039 | 	<
	grtr | 	0038 | 	>
	equl | 	0042 | 	=
	 | 	0039 | 	<
	equl | 	0042 | 	=
	equl | 	0042 | 	=
	 | 	0039 | 	<
	grtr | 	0038 | 	>
	coma | 	0044 | 	,
	lfbr | 	0045 | 	[
	rtbr | 	0046 | 	]
0029 (* mixed in reserve words 
	coln | 	0047 | 	:
	IDNT | 	0050 | 	mixed
	IDNT | 	0050 | 	in
	IDNT | 	0050 | 	reserve
	IDNT | 	0050 | 	words
0030 below........................... *)  'single quote bad'
	IDNT | 	0050 | 	below
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	dots | 	0048 | 	.
	mult | 	0031 | 	*
	rtpr | 	0035 | 	)
	unkn | 	0099 | 	'
	IDNT | 	0050 | 	single
	IDNT | 	0050 | 	quote
	IDNT | 	0050 | 	bad
0031 
0032   GoTo JumpOut;  INTEGER TO DO
	unkn | 	0099 | 	'

  
	goto | 	0000 | 	GoTo
	IDNT | 	0050 | 	JumpOut
	endl | 	0036 | 	;
	intr | 	0001 | 	INTEGER
	_to_ | 	0002 | 	TO
	_do_ | 	0003 | 	DO
0033 	begin  if not then that else nothing
	begn | 	0011 | 	begin
	_if_ | 	0004 | 	if
	IDNT | 	0050 | 	not
	then | 	0005 | 	then
	IDNT | 	0050 | 	that
	else | 	0006 | 	else
	IDNT | 	0050 | 	nothing
0034 IF THEN ELSE
	_if_ | 	0004 | 	IF
	then | 	0005 | 	THEN
	else | 	0006 | 	ELSE
0035 For I := 1 to 100.E7 of float do
	_for | 	0007 | 	For
	IDNT | 	0050 | 	I
	asgn | 	0037 | 	:=
	INTC | 	0051 | 	1
	_to_ | 	0002 | 	to
	FLOT | 	0052 | 	100.E7
	_of_ | 	0008 | 	of
	IDNT | 	0050 | 	float
	_do_ | 	0003 | 	do
0036     WRITELN  READLN 
	wrln | 	0009 | 	WRITELN
	IDNT | 	0050 | 	READLN
0037     BEGIN
	begn | 	0011 | 	BEGIN
0038     END   
	end | 	0012 | 	END
0039   declare  ARRAY 
	IDNT | 	0050 | 	declare
	arry | 	0025 | 	ARRAY
0040    VAR WHILE  module UNIT Label  RePeaT  UNTIL done = TRUE;
	var | 	0013 | 	VAR
	whil | 	0014 | 	WHILE
	IDNT | 	0050 | 	module
	unit | 	0015 | 	UNIT
	labl | 	0016 | 	Label
	rept | 	0017 | 	RePeaT
	untl | 	0018 | 	UNTIL
	IDNT | 	0050 | 	done
	equl | 	0042 | 	=
	IDNT | 	0050 | 	TRUE
	endl | 	0036 | 	;
0041 
0042  PROCEDURE  FUNCTION DOWNto does READLN   RETURN
	proc | 	0019 | 	PROCEDURE
	func | 	0021 | 	FUNCTION
	dwto | 	0020 | 	DOWNto
	IDNT | 	0050 | 	does
	IDNT | 	0050 | 	READLN
	rtrn | 	0022 | 	RETURN
0043 	FLOAT
	IDNT | 	0050 | 	FLOAT
0044 	STRING
	stng | 	0024 | 	STRING
0045 
0046 reserve writeln.   !@#$%^&*()_+
	IDNT | 	0050 | 	reserve
	wrln | 	0009 | 	writeln
	dots | 	0048 | 	.
0047 sum := 0.0;
	unkn | 	0099 | 	!@#$%^&*()_+

	IDNT | 	0050 | 	sum
	asgn | 	0037 | 	:=
	FLOT | 	0052 | 	0.0
	endl | 	0036 | 	;
0048 sum := sum + 2;
	IDNT | 	0050 | 	sum
	asgn | 	0037 | 	:=
	IDNT | 	0050 | 	sum
	add_ | 	0032 | 	+
	INTC | 	0051 | 	2
	endl | 	0036 | 	;
0049 What if 2. is found?
	IDNT | 	0050 | 	What
	_if_ | 	0004 | 	if
	FLOT | 	0052 | 	2.
	IDNT | 	0050 | 	is
	IDNT | 	0050 | 	found
0050 5.E+
	unkn | 	0099 | 	?

**** ERROR FOUND: Not a Valid Floating Point!
**** ERROR FOUND: Something seems wrong!
	unkn | 	0099 | 	5.E
	add_ | 	0032 | 	+
0051     7.E-3 { is bad, no + or - allowed}
**** ERROR FOUND: Not a Valid Floating Point!
**** ERROR FOUND: Something seems wrong!
	unkn | 	0099 | 	7.E
	subt | 	0033 | 	-
	INTC | 	0051 | 	3
0052 (* end of file comes
0053    before the end of this 
0054    comment-- Throw an Error!
0055 
0056 
0057                      
**** ERROR FOUND: Comment not terminated before End Of File
Successfully wrote to the file.
Done.

Process finished with exit code 0