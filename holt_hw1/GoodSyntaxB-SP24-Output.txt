ant -f F:\\!CurrSchool\\CS4100\\JavaProj\\SP24Project5 -Dnb.internal.action.name=run run
init:
Deleting: F:\!CurrSchool\CS4100\JavaProj\SP24Project5\build\built-jar.properties
deps-jar:
Updating property file: F:\!CurrSchool\CS4100\JavaProj\SP24Project5\build\built-jar.properties
compile:
run:
Syntax Part B SP 2024, by <Student Name>
Parsing f:\SyntaxB-GOOD-SP24.txt
0001 UNIT GOOD3B;
f:\SyntaxB-GOOD-SP24
	UNIT | 	0015 | 	UNIT
--> Entering Program
	IDNT | 	0050 | 	GOOD3B
	SEMI | 	0036 | 	;
0002 
0003 (* This Part 3B test file should have NO errors! *)
0004 VAR COUNT, TOTAL : INTEGER;
	VAR_ | 	0013 | 	VAR
 --> Entering Block
  --> Entering Variabledecsec
	IDNT | 	0050 | 	COUNT
	COMA | 	0044 | 	,
	IDNT | 	0050 | 	TOTAL
	COLN | 	0047 | 	:
	INTG | 	0001 | 	INTEGER
   --> Entering Simpletype
	SEMI | 	0036 | 	;
   <-- Exiting Simpletype
0005 VAR I : INTEGER;
	VAR_ | 	0013 | 	VAR
  <-- Exiting variabledecsec
  --> Entering Variabledecsec
	IDNT | 	0050 | 	I
	COLN | 	0047 | 	:
	INTG | 	0001 | 	INTEGER
   --> Entering Simpletype
	SEMI | 	0036 | 	;
   <-- Exiting Simpletype
0006 VAR STOP : integer;
	VAR_ | 	0013 | 	VAR
  <-- Exiting variabledecsec
  --> Entering Variabledecsec
	IDNT | 	0050 | 	STOP
	COLN | 	0047 | 	:
	INTG | 	0001 | 	integer
   --> Entering Simpletype
	SEMI | 	0036 | 	;
   <-- Exiting Simpletype
0007 
0008 BEGIN
	BGIN | 	0011 | 	BEGIN
  <-- Exiting variabledecsec
  --> Entering Blockbody
0009 READLN(STOP);
	READ | 	0010 | 	READLN
   --> Entering Statement
    --> Entering handleReadln
	LPAR | 	0034 | 	(
	IDNT | 	0050 | 	STOP
     --> Entering Variable
	RPAR | 	0035 | 	)
     <-- Exiting Variable
	SEMI | 	0036 | 	;
    <-- Exiting handleReadln
   <-- Exiting Statement
0010 TOTAL := 12;
	IDNT | 	0050 | 	TOTAL
   --> Entering Statement
    --> Entering handleAssignment
     --> Entering Variable
	ASGN | 	0037 | 	:=
     <-- Exiting Variable
	ICNS | 	0051 | 	12
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
	SEMI | 	0036 | 	;
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
    <-- Exiting handleAssignment
   <-- Exiting Statement
0011 FOR I := 1 TO STOP DO
	FOR_ | 	0007 | 	FOR
   --> Entering Statement
    --> Entering handleFor
	IDNT | 	0050 | 	I
     --> Entering Variable
	ASGN | 	0037 | 	:=
     <-- Exiting Variable
	ICNS | 	0051 | 	1
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
	_TO_ | 	0002 | 	TO
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
	IDNT | 	0050 | 	STOP
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
	_DO_ | 	0003 | 	DO
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
0012   BEGIN
	BGIN | 	0011 | 	BEGIN
     --> Entering Statement
      --> Entering Blockbody
0013   TOTAL := TOTAL + I
	IDNT | 	0050 | 	TOTAL
       --> Entering Statement
        --> Entering handleAssignment
         --> Entering Variable
	ASGN | 	0037 | 	:=
         <-- Exiting Variable
	IDNT | 	0050 | 	TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
	PLUS | 	0032 | 	+
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
	IDNT | 	0050 | 	I
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
0014   END;
	END_ | 	0012 | 	END
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
        <-- Exiting handleAssignment
       <-- Exiting Statement
	SEMI | 	0036 | 	;
      <-- Exiting Blockbody
     <-- Exiting Statement
    <-- Exiting handleFor
   <-- Exiting Statement
0015 
0016 REPEAT
	REPT | 	0017 | 	REPEAT
   --> Entering Statement
    --> Entering handleRepeat
0017   TOTAL := TOTAL - 1
	IDNT | 	0050 | 	TOTAL
     --> Entering Statement
      --> Entering handleAssignment
       --> Entering Variable
	ASGN | 	0037 | 	:=
       <-- Exiting Variable
	IDNT | 	0050 | 	TOTAL
       --> Entering SimpleExpression
        --> Entering Term
         --> Entering Factor
          --> Entering Variable
	MINS | 	0033 | 	-
          <-- Exiting Variable
         <-- Exiting Factor
        <-- Exiting Term
	ICNS | 	0051 | 	1
        --> Entering Term
         --> Entering Factor
          --> Entering UnsignedConstant
           --> Entering UnsignedNumber
0018 UNTIL TOTAL <= 20;
	UNTL | 	0018 | 	UNTIL
           <-- Exiting UnsignedNumber
          <-- Exiting UnsignedConstant
         <-- Exiting Factor
        <-- Exiting Term
       <-- Exiting SimpleExpression
      <-- Exiting handleAssignment
     <-- Exiting Statement
	IDNT | 	0050 | 	TOTAL
     --> Entering Relexpression
      --> Entering SimpleExpression
       --> Entering Term
        --> Entering Factor
         --> Entering Variable
	LEEQ | 	0041 | 	<=
         <-- Exiting Variable
        <-- Exiting Factor
       <-- Exiting Term
      <-- Exiting SimpleExpression
      --> Entering Relop
	ICNS | 	0051 | 	20
      <-- Exiting Relop
      --> Entering SimpleExpression
       --> Entering Term
        --> Entering Factor
         --> Entering UnsignedConstant
          --> Entering UnsignedNumber
	SEMI | 	0036 | 	;
          <-- Exiting UnsignedNumber
         <-- Exiting UnsignedConstant
        <-- Exiting Factor
       <-- Exiting Term
      <-- Exiting SimpleExpression
     <-- Exiting Relexpression
    <-- Exiting handleRepeat
   <-- Exiting Statement
0019 
0020 IF TOTAL > 15 THEN
	_IF_ | 	0004 | 	IF
   --> Entering Statement
    --> Entering handleIf
	IDNT | 	0050 | 	TOTAL
     --> Entering Relexpression
      --> Entering SimpleExpression
       --> Entering Term
        --> Entering Factor
         --> Entering Variable
	GRTR | 	0038 | 	>
         <-- Exiting Variable
        <-- Exiting Factor
       <-- Exiting Term
      <-- Exiting SimpleExpression
      --> Entering Relop
	ICNS | 	0051 | 	15
      <-- Exiting Relop
      --> Entering SimpleExpression
       --> Entering Term
        --> Entering Factor
         --> Entering UnsignedConstant
          --> Entering UnsignedNumber
	THEN | 	0005 | 	THEN
          <-- Exiting UnsignedNumber
         <-- Exiting UnsignedConstant
        <-- Exiting Factor
       <-- Exiting Term
      <-- Exiting SimpleExpression
     <-- Exiting Relexpression
0021   BEGIN
	BGIN | 	0011 | 	BEGIN
     --> Entering Statement
      --> Entering Blockbody
0022   WHILE TOTAL > 10 DO 
	DOLP | 	0014 | 	WHILE
       --> Entering Statement
        --> Entering handleWhile
	IDNT | 	0050 | 	TOTAL
         --> Entering Relexpression
          --> Entering SimpleExpression
           --> Entering Term
            --> Entering Factor
             --> Entering Variable
	GRTR | 	0038 | 	>
             <-- Exiting Variable
            <-- Exiting Factor
           <-- Exiting Term
          <-- Exiting SimpleExpression
          --> Entering Relop
	ICNS | 	0051 | 	10
          <-- Exiting Relop
          --> Entering SimpleExpression
           --> Entering Term
            --> Entering Factor
             --> Entering UnsignedConstant
              --> Entering UnsignedNumber
	_DO_ | 	0003 | 	DO
              <-- Exiting UnsignedNumber
             <-- Exiting UnsignedConstant
            <-- Exiting Factor
           <-- Exiting Term
          <-- Exiting SimpleExpression
         <-- Exiting Relexpression
0023     TOTAL := TOTAL - (2 * 1)
	IDNT | 	0050 | 	TOTAL
         --> Entering Statement
          --> Entering handleAssignment
           --> Entering Variable
	ASGN | 	0037 | 	:=
           <-- Exiting Variable
	IDNT | 	0050 | 	TOTAL
           --> Entering SimpleExpression
            --> Entering Term
             --> Entering Factor
              --> Entering Variable
	MINS | 	0033 | 	-
              <-- Exiting Variable
             <-- Exiting Factor
            <-- Exiting Term
	LPAR | 	0034 | 	(
            --> Entering Term
             --> Entering Factor
	ICNS | 	0051 | 	2
              --> Entering SimpleExpression
               --> Entering Term
                --> Entering Factor
                 --> Entering UnsignedConstant
                  --> Entering UnsignedNumber
	MULT | 	0031 | 	*
                  <-- Exiting UnsignedNumber
                 <-- Exiting UnsignedConstant
                <-- Exiting Factor
	ICNS | 	0051 | 	1
                --> Entering Factor
                 --> Entering UnsignedConstant
                  --> Entering UnsignedNumber
	RPAR | 	0035 | 	)
                  <-- Exiting UnsignedNumber
                 <-- Exiting UnsignedConstant
                <-- Exiting Factor
               <-- Exiting Term
              <-- Exiting SimpleExpression
0024   END
	END_ | 	0012 | 	END
             <-- Exiting Factor
            <-- Exiting Term
           <-- Exiting SimpleExpression
          <-- Exiting handleAssignment
         <-- Exiting Statement
        <-- Exiting handleWhile
       <-- Exiting Statement
0025 ELSE
	ELSE | 	0006 | 	ELSE
      <-- Exiting Blockbody
     <-- Exiting Statement
0026   IF TOTAL < 12 THEN
	_IF_ | 	0004 | 	IF
     --> Entering Statement
      --> Entering handleIf
	IDNT | 	0050 | 	TOTAL
       --> Entering Relexpression
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering Variable
	LESS | 	0039 | 	<
           <-- Exiting Variable
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Relop
	ICNS | 	0051 | 	12
        <-- Exiting Relop
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering UnsignedConstant
            --> Entering UnsignedNumber
	THEN | 	0005 | 	THEN
            <-- Exiting UnsignedNumber
           <-- Exiting UnsignedConstant
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
       <-- Exiting Relexpression
0027     WRITELN(TOTAL)
	WRIT | 	0009 | 	WRITELN
       --> Entering Statement
        --> Entering handlePrintln
	LPAR | 	0034 | 	(
	IDNT | 	0050 | 	TOTAL
         --> Entering SimpleExpression
          --> Entering Term
           --> Entering Factor
            --> Entering Variable
	RPAR | 	0035 | 	)
            <-- Exiting Variable
           <-- Exiting Factor
          <-- Exiting Term
         <-- Exiting SimpleExpression
0028 END.
	END_ | 	0012 | 	END
        <-- Exiting handlePrintln
       <-- Exiting Statement
      <-- Exiting handleIf
     <-- Exiting Statement
    <-- Exiting handleIf
   <-- Exiting Statement
	PERD | 	0048 | 	.
  <-- Exiting Blockbody
 <-- Exiting Block
Success.
<-- Exiting Program
Done.
BUILD SUCCESSFUL (total time: 0 seconds)
